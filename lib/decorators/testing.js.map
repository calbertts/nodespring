{"version":3,"sources":["../../src/decorators/testing.js"],"names":[],"mappings":"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","file":"testing.js","sourcesContent":["import {ModuleContainer} from '../core/moduleContainer'\n\nvar injectMocksCllbk\nvar localMocksInjectedCllbk\nvar mocksToInject = {}\n\nlet isClass = (arg) => {\n  return arg && arg.constructor === Function\n}\n\nexport function TestClass(testClass) {\n  if(!isClass(testClass))\n    throw new TypeError('A class was expected to test')\n\n  let testClassObj = new testClass()\n\n  injectMocksCllbk(testClassObj)\n  localMocksInjectedCllbk(testClassObj)\n\n  let testingMethods = Object.getOwnPropertyNames(testClass.prototype)\n\n  // Running all methods\n  let beforeMethods = testingMethods.filter((method) => {return testClassObj[method].beforeMethod === true})\n  let testMethods = testingMethods.filter((method) => {return testClassObj[method].testMethod === true})\n\n  testMethods.forEach((method) => {\n    beforeMethods.forEach((beforeMethod) => {\n      testClassObj[beforeMethod]()\n    })\n    testClassObj[method]()\n  })\n}\n\n\nexport function Mock(type) {\n  if(!type.moduleType === 'interface')\n    throw new TypeError('Mock expects an Interface as a parameter, instead ' + type.name + ' was received')\n\n  return (target, property, descriptor) => {\n    let mockInstance = {\n      uniqueMethod: () => {\n        return \"String from mock\"\n      }\n    }\n\n    descriptor.writable = true\n    mocksToInject[type.name] = mockInstance\n\n    localMocksInjectedCllbk = (testClassObj) => {\n      testClassObj[property] = mockInstance\n    }\n  }\n}\n\n\nexport function Test(target, property, descriptor) {\n  if(typeof target[property] !== 'function')\n    throw new TypeError('A function was expected to test: ' + property)\n\n  descriptor.value.testMethod = true\n}\n\n\nexport function Before(target, property, descriptor) {\n  if(typeof target[property] !== 'function')\n    throw new TypeError('A function was expected to test: ' + property)\n\n  descriptor.value.beforeMethod = true\n}\n\n\nexport function InjectMocks(type) {\n  return (target, property, descriptor) => {\n    descriptor.writable = true\n\n    let metaInstance\n    let objToTest\n\n    switch(type.moduleType) {\n\n      case 'implementation' :\n        metaInstance = ModuleContainer.getModuleContainer()[type.interfaceName]\n        objToTest = new metaInstance.impl()\n      break\n\n      case 'service' :\n        metaInstance = ModuleContainer.getModuleContainer()[type.name]\n        objToTest = metaInstance.impl\n      break\n\n      case 'controller' :\n        throw new TypeError('Testing for Controllers are not supported yet')\n      break\n    }\n\n    for(let classProp in metaInstance.dependencies) {\n      let dataType = metaInstance.dependencies[classProp]\n      objToTest[classProp] = mocksToInject[dataType]\n    }\n\n    injectMocksCllbk = (testClassObj) => {\n      testClassObj[property] = objToTest\n    }\n  }\n}"]}