{"version":3,"sources":["../../src/decorators/service.js"],"names":[],"mappings":";;;;;QAUgB;;;;;;;;;;;;;;;;AAAT,SAAS,OAAT,CAAiB,YAAjB,EAA+B;AACpC,MAAI,kBAAkB,eAAK,OAAL,CAAa,yBAAe,QAAf,GAA0B,OAA1B,CAAkC,0BAAgB,MAAhB,EAAwB,EAA1D,EAA8D,OAA9D,CAAsE,KAAtE,EAA6E,EAA7E,CAAb,CAAlB,CADgC;AAEpC,MAAI,cAAc,kBAAkB,GAAlB,GAAwB,aAAa,IAAb,CAFN;;AAIpC,eAAa,WAAb,GAA2B,aAAa,WAAb,IAA4B,WAA5B,CAJS;AAKpC,eAAa,UAAb,GAA0B,SAA1B,CALoC;;AAOpC,4BAAgB,UAAhB,CAA2B,YAA3B,EAPoC;CAA/B","file":"service.js","sourcesContent":["/**\n * Service decorator\n * @author calbertts\n */\n\nimport ModuleContainer from '../core/ModuleContainer'\nimport NodeSpringUtil from '../core/NodeSpringUtil'\nimport path from 'path'\n\n\nexport function Service(serviceClass) {\n  let basePackagePath = path.dirname(NodeSpringUtil.getStack().replace(ModuleContainer.appDir, '').replace('.js', ''))\n  let packagePath = basePackagePath + '/' + serviceClass.name\n\n  serviceClass.packagePath = serviceClass.packagePath || packagePath\n  serviceClass.moduleType = 'service'\n\n  ModuleContainer.addService(serviceClass)\n}\n"]}