{"version":3,"sources":["../../src/core/NodeSpringApp.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWqB;;;AAEnB,WAFmB,aAEnB,CAAY,MAAZ,EAAoB;0BAFD,eAEC;;uEAFD,2BAEC;;AAElB,UAAK,MAAL,GAAc,MAAd;;;AAFkB,QAKf,CAAC,OAAO,gBAAP,EAAyB;AAC3B,aAAO,gBAAP,GAA0B,EAA1B,CAD2B;KAA7B;;AAIA,WAAO,gBAAP,CAAwB,eAAxB,GAA0C,IAA1C;;;AATkB,QAYd,kBAAkB;AACpB,eAAS,CAAC,QAAD,EAAW,KAAX,EAAkB,UAAlB,CAAT;AACA,wBAAkB,CAAC,SAAD,EAAY,UAAZ,CAAlB;AACA,8BAAwB,CAAC,UAAD,EAAa,aAAb,CAAxB;AACA,wBAAkB,CAAC,UAAD,EAAa,MAAb,CAAlB;AACA,wBAAkB,CAAC,UAAD,EAAa,MAAb,CAAlB;AACA,0BAAoB,CAAC,WAAD,EAAc,iBAAd,EAAiC,UAAjC,CAApB;KANE,CAZc;;+BAqBV;AACN,UAAG,MAAK,UAAL,MAAqB,SAArB,EAAgC;AACjC,YAAI,sBAAsB,kCAAwB,gBAAgB,UAAhB,GAA6B,0BAA7B,GAA0D,MAAK,SAAL,CAAe,SAAf,CAAyB,WAAzB,CAAqC,IAArC,CAAxG,CAD6B;;AAGjC,iCAAe,wBAAf,CAAwC,mBAAxC,EAHiC;OAAnC,MAIO;;AACL,cAAI,eAAe,gBAAgB,UAAhB,CAAf;;;AAGJ,cAAI,0BAA0B,yBAAe,OAAf,CAAuB,MAAK,UAAL,CAAvB,CAA1B;;AAEJ,uBAAa,OAAb,CAAqB,UAAC,aAAD,EAAmB;AACtC,gBAAG,wBAAwB,OAAxB,CAAgC,aAAhC,IAAiD,CAAjD,EAAoD;AACrD,kBAAI,mBAAmB,kCAAwB,oBAAoB,aAApB,GAAoC,8CAApC,GAAqF,UAArF,GAAkG,sBAAlG,GAA2H,MAAK,SAAL,CAAe,SAAf,CAAyB,WAAzB,CAAqC,IAArC,EAA2C,SAA9L,EAAyM,CAAzM,CAAnB,CADiD;AAErD,uCAAe,wBAAf,CAAwC,gBAAxC,EAFqD;aAAvD;WADmB,CAArB;aANK;OAJP;MAtBgB;;AAqBlB,SAAI,IAAI,UAAJ,IAAkB,eAAtB,EAAuC;YAA/B,YAA+B;KAAvC;iBArBkB;GAApB;;eAFmB;;4BA4CX;AACN,gCAAgB,IAAhB,CAAqB,KAAK,MAAL,CAAY,QAAZ,EAAsB,IAA3C,EAAiD,KAAK,MAAL,CAAY,UAAZ,EAAwB,KAAK,MAAL,CAAY,OAAZ,EAAqB,KAAK,MAAL,CAAY,WAAZ,EAAyB,KAAK,MAAL,CAAY,SAAZ,CAAvH,CADM;AAEN,gCAAgB,WAAhB,GAFM;;;;SA5CW","file":"NodeSpringApp.js","sourcesContent":["/**\n * NodeSpringApp\n * @author calbertts\n */\n\nimport ModuleContainer from './ModuleContainer'\nimport Abstract from './Abstract'\nimport NodeSpringUtil from './NodeSpringUtil'\nimport NodeSpringException from '../exceptions/NodeSpringException'\n\n\nexport default class NodeSpringApp extends Abstract {\n\n  constructor(config) {\n    super()\n    this.config = config\n\n    // Global settings\n    if(!global.NodeSpringConfig) {\n      global.NodeSpringConfig = {}\n    }\n\n    global.NodeSpringConfig.printExceptions = true\n\n    // Checking methods that need to be implemented\n    let requiredMethods = {\n      bindURL: ['method', 'url', 'callback'],\n      getRequestParams: ['request', 'callback'],\n      setContentTypeResponse: ['response', 'contentType'],\n      sendJSONResponse: ['response', 'data'],\n      sendDataResponse: ['response', 'data'],\n      addSocketListeners: ['namespace', 'socketListeners', 'instance']\n    }\n\n    for(let methodName in requiredMethods) {\n      if(this[methodName] === undefined) {\n        let noImplementedMethod = new NodeSpringException('The method ' + methodName + ' must be implemented on ' + this.__proto__.__proto__.constructor.name)\n\n        NodeSpringUtil.throwNodeSpringException(noImplementedMethod)\n      } else {\n        let methodParams = requiredMethods[methodName]\n\n        // Check the parameters\n        let implementedMethodParams = NodeSpringUtil.getArgs(this[methodName])\n\n        methodParams.forEach((officialParam) => {\n          if(implementedMethodParams.indexOf(officialParam) < 0) {\n            let missingParameter = new NodeSpringException('The parameter \"' + officialParam + '\" is not present on the implemented method \"' + methodName + '(...)\" in the class ' + this.__proto__.__proto__.constructor.name, undefined, 6)\n            NodeSpringUtil.throwNodeSpringException(missingParameter)\n          }\n        })\n      }\n    }\n  }\n\n  start() {\n    ModuleContainer.init(this.config.classDir, this, this.config.implConfig, this.config.logging, this.config.loggingSync, this.config.debugging)\n    ModuleContainer.loadModules()\n  }\n}"]}