{"version":3,"sources":["../../src/core/NodeSpringApp.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWqB,a;YAAA,a;;AAEnB,WAFmB,aAEnB,CAAY,MAAZ,EAAoB;AAAA,0BAFD,aAEC;;AAAA,uEAFD,aAEC;;AAElB,UAAK,MAAL,GAAc,MAAd;;;AAGA,QAAG,CAAC,OAAO,gBAAX,EAA6B;AAC3B,aAAO,gBAAP,GAA0B,EAA1B;AACD;;AAED,WAAO,gBAAP,CAAwB,eAAxB,GAA0C,IAA1C;;;AAGA,QAAI,kBAAkB;AACpB,eAAS,CAAC,QAAD,EAAW,KAAX,EAAkB,UAAlB,CADW;AAEpB,wBAAkB,CAAC,SAAD,EAAY,UAAZ,CAFE;AAGpB,8BAAwB,CAAC,UAAD,EAAa,aAAb,CAHJ;AAIpB,wBAAkB,CAAC,UAAD,EAAa,MAAb,CAJE;AAKpB,wBAAkB,CAAC,UAAD,EAAa,MAAb,CALE;AAMpB,0BAAoB,CAAC,WAAD,EAAc,iBAAd,EAAiC,UAAjC;AANA,KAAtB;;AAZkB,+BAqBV,UArBU;AAsBhB,UAAG,MAAK,UAAL,MAAqB,SAAxB,EAAmC;AACjC,YAAI,sBAAsB,kCAAwB,gBAAgB,UAAhB,GAA6B,0BAA7B,GAA0D,MAAK,SAAL,CAAe,SAAf,CAAyB,WAAzB,CAAqC,IAAvH,CAA1B;;AAEA,iCAAe,wBAAf,CAAwC,mBAAxC;AACD,OAJD,MAIO;AAAA;AACL,cAAI,eAAe,gBAAgB,UAAhB,CAAnB;;;AAGA,cAAI,0BAA0B,yBAAe,OAAf,CAAuB,MAAK,UAAL,CAAvB,CAA9B;;AAEA,uBAAa,OAAb,CAAqB,UAAC,aAAD,EAAmB;AACtC,gBAAG,wBAAwB,OAAxB,CAAgC,aAAhC,IAAiD,CAApD,EAAuD;AACrD,kBAAI,mBAAmB,kCAAwB,oBAAoB,aAApB,GAAoC,8CAApC,GAAqF,UAArF,GAAkG,sBAAlG,GAA2H,MAAK,SAAL,CAAe,SAAf,CAAyB,WAAzB,CAAqC,IAAxL,EAA8L,SAA9L,EAAyM,CAAzM,CAAvB;AACA,uCAAe,wBAAf,CAAwC,gBAAxC;AACD;AACF,WALD;AANK;AAYN;AAtCe;;AAqBlB,SAAI,IAAI,UAAR,IAAsB,eAAtB,EAAuC;AAAA,YAA/B,UAA+B;AAkBtC;AAvCiB;AAwCnB;;eA1CkB,a;;4BA4CX;AACN,gCAAgB,IAAhB,CAAqB,KAAK,MAAL,CAAY,QAAjC,EAA2C,IAA3C,EAAiD,KAAK,MAAL,CAAY,UAA7D,EAAyE,KAAK,MAAL,CAAY,OAArF,EAA8F,KAAK,MAAL,CAAY,WAA1G,EAAuH,KAAK,MAAL,CAAY,SAAnI;AACA,gCAAgB,WAAhB;AACD;;;SA/CkB,a;;;kBAAA,a","file":"NodeSpringApp.js","sourcesContent":["/**\n * NodeSpringApp\n * @author calbertts\n */\n\nimport ModuleContainer from './ModuleContainer'\nimport Abstract from './Abstract'\nimport NodeSpringUtil from './NodeSpringUtil'\nimport NodeSpringException from '../exceptions/NodeSpringException'\n\n\nexport default class NodeSpringApp extends Abstract {\n\n  constructor(config) {\n    super()\n    this.config = config\n\n    // Global settings\n    if(!global.NodeSpringConfig) {\n      global.NodeSpringConfig = {}\n    }\n\n    global.NodeSpringConfig.printExceptions = true\n\n    // Checking methods that need to be implemented\n    let requiredMethods = {\n      bindURL: ['method', 'url', 'callback'],\n      getRequestParams: ['request', 'callback'],\n      setContentTypeResponse: ['response', 'contentType'],\n      sendJSONResponse: ['response', 'data'],\n      sendDataResponse: ['response', 'data'],\n      addSocketListeners: ['namespace', 'socketListeners', 'instance']\n    }\n\n    for(let methodName in requiredMethods) {\n      if(this[methodName] === undefined) {\n        let noImplementedMethod = new NodeSpringException('The method ' + methodName + ' must be implemented on ' + this.__proto__.__proto__.constructor.name)\n\n        NodeSpringUtil.throwNodeSpringException(noImplementedMethod)\n      } else {\n        let methodParams = requiredMethods[methodName]\n\n        // Check the parameters\n        let implementedMethodParams = NodeSpringUtil.getArgs(this[methodName])\n\n        methodParams.forEach((officialParam) => {\n          if(implementedMethodParams.indexOf(officialParam) < 0) {\n            let missingParameter = new NodeSpringException('The parameter \"' + officialParam + '\" is not present on the implemented method \"' + methodName + '(...)\" in the class ' + this.__proto__.__proto__.constructor.name, undefined, 6)\n            NodeSpringUtil.throwNodeSpringException(missingParameter)\n          }\n        })\n      }\n    }\n  }\n\n  start() {\n    ModuleContainer.init(this.config.classDir, this, this.config.implConfig, this.config.logging, this.config.loggingSync, this.config.debugging)\n    ModuleContainer.loadModules()\n  }\n}"]}